FROM openjdk:8-windowsservercore

MAINTAINER Alex Smagin

# Jenkins defaults (use --build-arg to override)
ARG JENKINS_VERSION=2.46.1
ARG JENKINS_UC=https://updates.jenkins.io

# Jenkins setup
ENV JENKINS_HOME=c:/jenkins

#Git defaults (use --build-arg to override)
ARG GIT_VERSION=2.12.2

# Promote arg to env
ENV JENKINS_UC=${JENKINS_UC}

# $ProgressPreference will disable download progress info and speed-up download
SHELL ["powershell", "-NoProfile", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; "]

# Note: Install Jenkins slave
RUN \
    New-Item -ItemType Directory -Force -Path 'c:/jenkins'; \
    [Net.ServicePointManager]::SecurityProtocol = 'tls12'; \
    Invoke-WebRequest "https://repo.jenkins-ci.org/public/org/jenkins-ci/main/jenkins-war/$env:JENKINS_VERSION/jenkins-war-$env:JENKINS_VERSION.war" -OutFile "$env:TEMP/jenkins.zip" -UseBasicParsing; \
    Expand-Archive "$env:TEMP/jenkins.zip" -Destination "$env:TEMP/jenkins"; \
    # Hack: it seems that in jenkins verison 2.46 slave is generated by renaming remoting jar
    Copy-Item "$env:TEMP/jenkins/WEB-INF/lib/remoting-3.7.jar" -Destination "c:/jenkins/slave.jar"; \
    dir "$env:TEMP" | Remove-Item -Force -Recurse -ErrorAction SilentlyContinue

# Note: Add .NET + ASP.NET
RUN \
    Install-WindowsFeature NET-Framework-45-ASPNET ; \
    Install-WindowsFeature Web-Asp-Net45;

# Note: Get MSBuild 14.
RUN \
    Invoke-WebRequest "https://download.microsoft.com/download/E/E/D/EEDF18A8-4AED-4CE0-BEBE-70A83094FC5A/BuildTools_Full.exe" -OutFile "$env:TEMP\BuildTools_Full.exe" -UseBasicParsing; \
    Start-Process -FilePath "$env:TEMP\BuildTools_Full.exe" -ArgumentList '/Passive', '/NoRestart' -PassThru | Wait-Process; \
    dir "$env:TEMP" | Remove-Item -Force -Recurse -ErrorAction SilentlyContinue
    # Todo: delete the BuildTools_Full.exe file in this layer

# Note: Add NuGet
RUN \
    New-Item -ItemType Directory -Force -Path 'c:/nuget'; \
    Invoke-WebRequest "https://dist.nuget.org/win-x86-commandline/latest/nuget.exe" -OutFile "c:/nuget/nuget.exe" -UseBasicParsing;

# Note: Install Web Targets v14
RUN \
    New-Item -ItemType Directory -Force -Path 'c:/Program Files (x86)/MSBuild/Microsoft/VisualStudio/v14.0'; \
    cd 'c:/Program Files (x86)/MSBuild/Microsoft/VisualStudio/v14.0'; \
    & "c:/nuget/nuget.exe" Install MSBuild.Microsoft.VisualStudio.Web.targets -Version 14.0.0.3 ; \
    mv 'c:/Program Files (x86)/MSBuild/Microsoft/VisualStudio/v14.0/MSBuild.Microsoft.VisualStudio.Web.targets.14.0.0.3/tools/VSToolsPath/*' 'c:/Program Files (x86)/MSBuild/Microsoft/VisualStudio/v14.0/'; \
    # TODO: refactor with docker ENV after 1.4 release. 
    $env:PATH = '{0};{1}' -f $env:PATH, 'c:/Program Files (x86)/MSBuild/14.0/Bin/msbuild.exe'; \
        [Environment]::SetEnvironmentVariable('PATH', $env:PATH, 'Machine'); \
    cd /

# Note: Install Git
RUN \
    New-Item -ItemType Directory -Force -Path 'c:/git'; \
    [Net.ServicePointManager]::SecurityProtocol = 'tls12'; \
    Invoke-WebRequest "https://github.com/git-for-windows/git/releases/download/v$env:GIT_VERSION.windows.1/Git-$env:GIT_VERSION-64-bit.exe" -OutFile "$env:TEMP/git.exe" -UseBasicParsing; \
    Start-Process -FilePath "$env:TEMP/git.exe" -ArgumentList '/VERYSILENT', '/NORESTART', '/NOCANCEL', '/SP-', '/DIR="c:/git"' -PassThru | Wait-Process; \
    dir "$env:TEMP" | Remove-Item -Force -Recurse -ErrorAction SilentlyContinue

# Note: Install NodeJS
RUN \
    # TODO: refactor with docker ENV after 1.4 release. 
    if (-not($env:NODEJS_VERSION)) { $env:NODEJS_VERSION = '6.10.1'; \
        [Environment]::SetEnvironmentVariable('NODEJS_VERSION', $env:NODEJS_VERSION, 'Machine') }; \
    Invoke-WebRequest "https://nodejs.org/dist/v$env:NODEJS_VERSION/node-v$env:NODEJS_VERSION-x64.msi" -OutFile "$env:TEMP/nodejs.msi" -UseBasicParsing; \
    Start-Process -FilePath "$env:TEMP/nodejs.msi" -ArgumentList '/quiet', '/norestart' -PassThru | Wait-Process; \
    dir "$env:TEMP" | Remove-Item -Force -Recurse -ErrorAction SilentlyContinue

# Note: Install Jetbrains Static Code Analysis tools
RUN \
    # TODO: refactor with docker ENV after 1.4 release. 
    if (-not($env:JETBRAINS_TOOLS_VERSION)) { $env:JETBRAINS_TOOLS_VERSION = '2016.3.20170126.124346'; \
        [Environment]::SetEnvironmentVariable('JETBRAINS_TOOLS_VERSION', $env:JETBRAINS_TOOLS_VERSION, 'Machine') }; \
    New-Item -ItemType Directory -Force -Path 'c:/jetbrains-commandline-tools'; \
    Invoke-WebRequest "https://download.jetbrains.com/resharper/JetBrains.ReSharper.CommandLineTools.$env:JETBRAINS_TOOLS_VERSION.zip" -OutFile "$env:TEMP/jetbrains.zip" -UseBasicParsing; \
    Expand-Archive "$env:TEMP/jetbrains.zip" -Destination "c:/jetbrains-commandline-tools"; \
    dir "$env:TEMP" | Remove-Item -Force -Recurse -ErrorAction SilentlyContinue

# Note: Install Nunit
RUN \
    # TODO: refactor with docker ENV after 1.4 release. 
    if (-not($env:NUNIT_VERSION)) { $env:NUNIT_VERSION = '3.6.1'; \
        [Environment]::SetEnvironmentVariable('NUNIT_VERSION', $env:NUNIT_VERSION, 'Machine') }; \
    New-Item -ItemType Directory -Force -Path 'c:/nunit'; \
    Invoke-WebRequest "https://github.com/nunit/nunit-console/releases/download/$env:NUNIT_VERSION/NUnit.Console-$env:NUNIT_VERSION.zip" -OutFile "$env:TEMP/nunit.zip" -UseBasicParsing; \
    Expand-Archive "$env:TEMP/nunit.zip" -Destination "c:/nunit"; \
    dir "$env:TEMP" | Remove-Item -Force -Recurse -ErrorAction SilentlyContinue

# Note: Install xUnit
RUN \
    # TODO: refactor with docker ENV after 1.4 release. 
    if (-not($env:XUNIT_VERSION)) { $env:XUNIT_VERSION = '2.2.0'; \
        [Environment]::SetEnvironmentVariable('XUNIT_VERSION', $env:XUNIT_VERSION, 'Machine') }; \
    New-Item -ItemType Directory -Force -Path 'c:/xunit'; \
    cd $env:TEMP; \
    & "c:/nuget/nuget.exe" Install xunit.runner.console -Version $env:XUNIT_VERSION; \
    mv "$env:TEMP/xunit.runner.console.$env:XUNIT_VERSION/tools/*" 'c:/xunit'; \
    dir "$env:TEMP" | Remove-Item -Force -Recurse -ErrorAction SilentlyContinue; \
    cd / ;

# Note: Set defaults for slave and copy scripts
RUN \
    $env:JENKINS_MASTER_HOST = 'jm'; \
    $env:JENKINS_AGENT_ID = '00'

COPY scripts /scripts

# Note: Volume for Jenkins backups
VOLUME c:/backups

CMD [ "powershell", "c:/scripts/startup.ps1" ]